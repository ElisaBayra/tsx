-- MySQL Script generated by MySQL Workbench
-- Tue Oct 31 21:56:37 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema nesp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `unit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `unit` ;

CREATE TABLE IF NOT EXISTS `unit` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `search_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `search_type` ;

CREATE TABLE IF NOT EXISTS `search_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `source_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `source_type` ;

CREATE TABLE IF NOT EXISTS `source_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `source` ;

CREATE TABLE IF NOT EXISTS `source` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `source_type_id` INT NULL,
  `provider` VARCHAR(255) NULL,
  `description` VARCHAR(255) NULL,
  `notes` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Source_SourceType_idx` (`source_type_id` ASC),
  CONSTRAINT `fk_Source_SourceType`
    FOREIGN KEY (`source_type_id`)
    REFERENCES `source_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t1_site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t1_site` ;

CREATE TABLE IF NOT EXISTS `t1_site` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `source_id` INT NULL,
  `name` VARCHAR(255) NULL,
  `search_type_id` INT NOT NULL,
  `notes` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_T1Site_Source1_idx` (`source_id` ASC),
  INDEX `fk_T1Site_SearchType1_idx` (`search_type_id` ASC),
  CONSTRAINT `fk_T1Site_Source1`
    FOREIGN KEY (`source_id`)
    REFERENCES `source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T1Site_SearchType1`
    FOREIGN KEY (`search_type_id`)
    REFERENCES `search_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t1_survey`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t1_survey` ;

CREATE TABLE IF NOT EXISTS `t1_survey` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `site_id` INT NOT NULL,
  `source_id` INT NOT NULL,
  `source_primary_key` VARCHAR(255) NOT NULL,
  `start_d` SMALLINT NULL,
  `start_m` SMALLINT NULL,
  `start_y` SMALLINT NOT NULL,
  `finish_d` SMALLINT NULL,
  `finish_m` SMALLINT NULL,
  `finish_y` SMALLINT NULL,
  `start_time` TIME NULL,
  `finish_time` TIME NULL,
  `duration_in_minutes` INT NULL,
  `area_in_m2` DOUBLE NULL,
  `length_in_km` DOUBLE NULL,
  `coords` POINT NULL,
  `location` VARCHAR(255) NULL,
  `positional_accuracy` DOUBLE NULL,
  `comments` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_T1Survey_T1Site1_idx` (`site_id` ASC),
  INDEX `fk_T1Survey_Source1_idx` (`source_id` ASC),
  UNIQUE INDEX `source_primary_key_UNIQUE` (`source_primary_key` ASC),
  CONSTRAINT `fk_T1Survey_T1Site1`
    FOREIGN KEY (`site_id`)
    REFERENCES `t1_site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T1Survey_Source1`
    FOREIGN KEY (`source_id`)
    REFERENCES `source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxon_level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxon_level` ;

CREATE TABLE IF NOT EXISTS `taxon_level` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxon`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxon` ;

CREATE TABLE IF NOT EXISTS `taxon` (
  `id` CHAR(6) NOT NULL,
  `ultrataxon` TINYINT(1) NOT NULL,
  `taxon_level_id` INT NOT NULL,
  `spno` SMALLINT NOT NULL,
  `common_name` VARCHAR(255) NOT NULL,
  `scientific_name` VARCHAR(255) NOT NULL,
  `family_common_name` VARCHAR(255) NULL,
  `family_scientific_name` VARCHAR(255) NULL,
  `order` VARCHAR(255) NULL,
  `population` VARCHAR(255) NULL,
  `australian_conservation_status` VARCHAR(255) NULL,
  `include_for_nesp` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_Taxon_TaxonLevel1_idx` (`taxon_level_id` ASC),
  CONSTRAINT `fk_Taxon_TaxonLevel1`
    FOREIGN KEY (`taxon_level_id`)
    REFERENCES `taxon_level` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxon_hybrid`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxon_hybrid` ;

CREATE TABLE IF NOT EXISTS `taxon_hybrid` (
  `id` CHAR(12) NOT NULL COMMENT 'e.g. u123a.b.c',
  `taxon_id` CHAR(6) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TaxonHybrid_Taxon1_idx` (`taxon_id` ASC),
  CONSTRAINT `fk_TaxonHybrid_Taxon1`
    FOREIGN KEY (`taxon_id`)
    REFERENCES `taxon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t1_sighting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t1_sighting` ;

CREATE TABLE IF NOT EXISTS `t1_sighting` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `survey_id` INT NOT NULL,
  `taxon_id` CHAR(6) NOT NULL,
  `count` DOUBLE NOT NULL,
  `unit_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_T1Sighting_T1Survey1_idx` (`survey_id` ASC),
  INDEX `fk_T1Sighting_Taxon1_idx` (`taxon_id` ASC),
  INDEX `fk_T1Sighting_Unit1_idx` (`unit_id` ASC),
  CONSTRAINT `fk_T1Sighting_T1Survey1`
    FOREIGN KEY (`survey_id`)
    REFERENCES `t1_survey` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T1Sighting_Taxon1`
    FOREIGN KEY (`taxon_id`)
    REFERENCES `taxon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T1Sighting_Unit1`
    FOREIGN KEY (`unit_id`)
    REFERENCES `unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incidental_sighting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `incidental_sighting` ;

CREATE TABLE IF NOT EXISTS `incidental_sighting` (
  `taxon_id` CHAR(6) NOT NULL,
  `coords` POINT NULL,
  `date` DATE NULL,
  PRIMARY KEY (`taxon_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t2_site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t2_site` ;

CREATE TABLE IF NOT EXISTS `t2_site` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `source_id` INT NULL,
  `name` VARCHAR(255) NULL,
  `search_type_id` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t2_survey`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t2_survey` ;

CREATE TABLE IF NOT EXISTS `t2_survey` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `source_Id` INT NOT NULL,
  `start_d` SMALLINT NULL,
  `start_m` SMALLINT NULL,
  `start_y` SMALLINT NOT NULL,
  `finish_d` SMALLINT NULL,
  `finish_m` SMALLINT NULL,
  `finish_y` SMALLINT NULL,
  `start_time` TIME NULL,
  `finish_time` TIME NULL,
  `duration_in_minutes` INT NULL,
  `area_in_m2` DOUBLE NULL,
  `length_in_km` DOUBLE NULL,
  `coords` POINT NULL,
  `location` VARCHAR(255) NULL,
  `position_accuracy` DOUBLE NULL,
  `comments` TEXT NULL,
  `search_type_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_T1Survey_Source1_idx` (`source_Id` ASC),
  INDEX `fk_T2Survey_SearchType1_idx` (`search_type_id` ASC),
  CONSTRAINT `fk_T1Survey_Source10`
    FOREIGN KEY (`source_Id`)
    REFERENCES `source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T2Survey_SearchType1`
    FOREIGN KEY (`search_type_id`)
    REFERENCES `search_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t2_survey_site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t2_survey_site` ;

CREATE TABLE IF NOT EXISTS `t2_survey_site` (
  `survey_id` INT NOT NULL,
  `site_id` INT NOT NULL,
  PRIMARY KEY (`survey_id`, `site_id`),
  INDEX `fk_T2SurveySite_T2Site1_idx` (`site_id` ASC),
  CONSTRAINT `fk_T2SurveySite_T2Survey1`
    FOREIGN KEY (`survey_id`)
    REFERENCES `t2_survey` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T2SurveySite_T2Site1`
    FOREIGN KEY (`site_id`)
    REFERENCES `t2_site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t2_sighting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t2_sighting` ;

CREATE TABLE IF NOT EXISTS `t2_sighting` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `survey_id` INT NULL,
  `taxon_id` CHAR(6) NULL,
  `count` DOUBLE NULL,
  `unit_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_T2Sighting_T2Survey1_idx` (`survey_id` ASC),
  INDEX `fk_T2Sighting_Unit1_idx` (`unit_id` ASC),
  INDEX `fk_T2Sighting_Taxon1_idx` (`taxon_id` ASC),
  CONSTRAINT `fk_T2Sighting_T2Survey1`
    FOREIGN KEY (`survey_id`)
    REFERENCES `t2_survey` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T2Sighting_Unit1`
    FOREIGN KEY (`unit_id`)
    REFERENCES `unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T2Sighting_Taxon1`
    FOREIGN KEY (`taxon_id`)
    REFERENCES `taxon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `range`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `range` ;

CREATE TABLE IF NOT EXISTS `range` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `t2_processed_sighting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `t2_processed_sighting` ;

CREATE TABLE IF NOT EXISTS `t2_processed_sighting` (
  `sighting_id` INT NOT NULL,
  `taxon_id` CHAR(6) NOT NULL,
  `range_id` INT NOT NULL,
  `generated_subspecies` TINYINT(1) NOT NULL,
  INDEX `fk_T2SightingRangeType_RangeType1_idx` (`range_id` ASC),
  PRIMARY KEY (`sighting_id`, `taxon_id`),
  INDEX `fk_T2ProcessedSighting_Taxon1_idx` (`taxon_id` ASC),
  CONSTRAINT `fk_T2SightingRangeType_RangeType1`
    FOREIGN KEY (`range_id`)
    REFERENCES `range` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T2ProcessedSighting_T2Sighting1`
    FOREIGN KEY (`sighting_id`)
    REFERENCES `t2_sighting` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_T2ProcessedSighting_Taxon1`
    FOREIGN KEY (`taxon_id`)
    REFERENCES `taxon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taxon_presence_alpha_hull`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `taxon_presence_alpha_hull` ;

CREATE TABLE IF NOT EXISTS `taxon_presence_alpha_hull` (
  `taxon_id` CHAR(6) NOT NULL,
  `range_id` INT NULL,
  `breeding_range_id` INT NULL,
  `geometry` MULTIPOLYGON NULL,
  PRIMARY KEY (`taxon_id`),
  INDEX `fk_taxon_presence_alpha_hull_range1_idx` (`range_id` ASC),
  CONSTRAINT `fk_taxon_presence_alpha_hull_taxon1`
    FOREIGN KEY (`taxon_id`)
    REFERENCES `taxon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_taxon_presence_alpha_hull_range1`
    FOREIGN KEY (`range_id`)
    REFERENCES `range` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `site_taxon_presence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `site_taxon_presence` ;

CREATE TABLE IF NOT EXISTS `site_taxon_presence` (
  `site_id` INT NOT NULL,
  `taxon_id` INT NULL,
  PRIMARY KEY (`site_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grid_taxon_presence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grid_taxon_presence` ;

CREATE TABLE IF NOT EXISTS `grid_taxon_presence` (
  `grid_size` INT NOT NULL,
  `grid_x` INT NOT NULL,
  `grid_y` INT NOT NULL,
  `taxon_id` INT NULL,
  `experimental_design_type_id` INT NULL,
  PRIMARY KEY (`grid_size`, `grid_x`, `grid_y`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Placeholder table for view `species_presence`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `species_presence` (`spno` INT, `coords` INT);

-- -----------------------------------------------------
-- View `species_presence`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `species_presence` ;
DROP TABLE IF EXISTS `species_presence`;
CREATE  OR REPLACE VIEW `species_presence` AS
SELECT spno, coords FROM t1_survey, t1_sighting, taxon WHERE survey_id = t1_survey.id AND taxon_id = taxon.id
UNION
SELECT spno, coords FROM t2_survey, t2_sighting, taxon WHERE survey_id = t2_survey.id AND taxon_id = taxon.id
UNION
SELECT spno, coords FROM incidental_sighting, taxon WHERE taxon_id = taxon.id;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
